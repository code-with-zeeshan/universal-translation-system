name: Preview Deploy per PR

on:
  pull_request:
    branches: [ main ]

jobs:
  preview:
    runs-on: ubuntu-latest
    environment: preview
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set PREVIEW namespace
        id: ns
        run: echo "ns=preview-${{ github.event.number }}" >> $GITHUB_OUTPUT

      - name: Install kubectl and kustomize
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/
          curl -sLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.3.0/kustomize_v5.3.0_linux_amd64.tar.gz
          tar -xzf kustomize.tar.gz
          sudo mv kustomize /usr/local/bin/

      - name: Configure kubeconfig (preview)
        run: |
          mkdir -p $HOME/.kube
          echo "${KUBECONFIG_PREVIEW_B64}" | base64 -d > $HOME/.kube/config
        env:
          KUBECONFIG_PREVIEW_B64: ${{ secrets.KUBECONFIG_PREVIEW_B64 }}

      - name: Patch GHCR image names and use PR ref for tag
        working-directory: kubernetes/overlays
        run: |
          sed -i "s#newName: ghcr.io/OWNER/REPO/decoder#newName: ghcr.io/${GITHUB_REPOSITORY}/decoder#g" kustomization.yaml
          sed -i "s#newName: ghcr.io/OWNER/REPO/coordinator#newName: ghcr.io/${GITHUB_REPOSITORY}/coordinator#g" kustomization.yaml
          sed -i "s/newTag: .*/newTag: pr-${{ github.event.number }}/g" kustomization.yaml || true

      - name: Build manifests
        working-directory: kubernetes/overlays
        run: |
          kustomize build . > ../../manifests.preview.yaml

      - name: Apply manifests (preview)
        env:
          NS: ${{ steps.ns.outputs.ns }}
        run: |
          kubectl create namespace "$NS" --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -n "$NS" -f manifests.preview.yaml

      - name: Comment namespace on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: preview-env
          message: |
            Preview deployed to namespace: ${{ steps.ns.outputs.ns }}